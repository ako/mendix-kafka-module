// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package kafkamodule.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * This action will listen to a topic, and start a microflow for each JSON message in that topic that passes a filter.
 * 
 * The filter is specified as the value at a certain place inside the message.
 * 
 * This action will always return true.
 */
public class StartFilteredProcessor extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String ProcessorName;
	private IMendixObject __Config;
	private kafkamodule.proxies.StreamsConfig Config;
	private java.lang.String FromTopic;
	private java.lang.String JsonPointer;
	private java.lang.String FilterValue;
	private java.lang.String ToTopic;
	private java.lang.String OnProcess;

	public StartFilteredProcessor(IContext context, java.lang.String ProcessorName, IMendixObject Config, java.lang.String FromTopic, java.lang.String JsonPointer, java.lang.String FilterValue, java.lang.String ToTopic, java.lang.String OnProcess)
	{
		super(context);
		this.ProcessorName = ProcessorName;
		this.__Config = Config;
		this.FromTopic = FromTopic;
		this.JsonPointer = JsonPointer;
		this.FilterValue = FilterValue;
		this.ToTopic = ToTopic;
		this.OnProcess = OnProcess;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.Config = __Config == null ? null : kafkamodule.proxies.StreamsConfig.initialize(getContext(), __Config);

		// BEGIN USER CODE
		KafkaProcessor processor = new FilteredKafkaProcessor(__Config, getContext(), FromTopic, JsonPointer, FilterValue, ToTopic, OnProcess); 
		processor.start();
		KafkaProcessorRepository.put(ProcessorName, processor);
		
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StartFilteredProcessor";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
